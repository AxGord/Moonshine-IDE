<?xml version="1.0"?>
<s:MXItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
                  xmlns:s="library://ns.adobe.com/flex/spark"
                  rollOver="onRollOverOut(event)" rollOut="onRollOverOut(event)" height="25">
    <s:layout>
        <s:HorizontalLayout paddingLeft="5" paddingRight="5" gap="0" verticalAlign="middle"/>
    </s:layout>
    <s:Label id="labelDisplay" paddingRight="10" width="100%" maxDisplayedLines="1" showTruncationTip="true"/>
    <s:Image id="copy" source="{copyIcon}" width="15" height="16"
             verticalCenter="0" buttonMode="true" visible="false" includeInLayout="false"
             click="onImageClick(event)"/>
    <fx:Script><![CDATA[
        import actionScripts.factory.FileLocation;
        import actionScripts.locator.IDEModel;
        import actionScripts.valueObjects.Range;
        import actionScripts.valueObjects.Position;

        [Embed(source="/elements/images/copy_content_icon.png")]
        [Bindable]
        private var copyIcon:Class;

        override public function set data(value:Object):void
        {
            super.data = value;
            if (value)
            {
                label = getLabel();
                toolTip = getToolTip();
            }
        }

        private function onImageClick(event:MouseEvent):void
        {
            event.stopImmediatePropagation();

            IDEModel.getInstance().clipboardCore.copyText(getValueToCopy());
        }

        private function onRollOverOut(event:MouseEvent):void
        {
            copy.visible = copy.includeInLayout = event.type == MouseEvent.ROLL_OVER;
        }

        private function getLabel():String
        {
            if (data)
            {
                var dataField:String = listData['dataField'];
                if (dataField == "path")
                {
                    var range:Range = data.range;
                    var start:Position = range.start;
                    var shortPath:String = new FileLocation(data.path).name;
                    return shortPath + " (" + (start.line + 1) + ", " + (start.character + 1) + ")";
                }
                else
                {
                    return data[dataField];
                }
            }

            return null;
        }

        public function getToolTip():String
        {
            if (data)
            {
                var dataField:String = listData['dataField'];
                if (dataField == "path")
                {
                    return data.path;
                }
            }

            return null;
        }

        public function getValueToCopy():String
        {
            if (data)
            {
                var dataField:String = listData['dataField'];
                if (dataField == "path")
                {
                    return data.path;
                }
                else
                {
                    return data[dataField];
                }
            }

            return null;
        }
        ]]></fx:Script>
</s:MXItemRenderer>
